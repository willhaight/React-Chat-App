{"ast":null,"code":"import _slicedToArray from \"/Users/willhaight/Desktop/react/React-Chat-App/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/willhaight/Desktop/react/React-Chat-App/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport Input from '../Input/Input';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        set = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        users = _useState6[0],\n        setUsers = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        messages = _useState10[0],\n        setMessages = _useState10[1];\n\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name;\n\n    socket = io(ENDPOINT);\n    set();\n    setName(name);\n    socket.emit('join', {\n      name\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"Data\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    console.log(message);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"This is a test\", React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(TextContainer, {\n    users: users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/willhaight/Desktop/react/React-Chat-App/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","TextContainer","Messages","Input","socket","Chat","location","name","setName","set","users","setUsers","message","setMessage","messages","setMessages","parse","search","ENDPOINT","emit","error","alert","on","sendMessage","event","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAO,YAAP;AAIA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACLT,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QACtBU,IADsB;AAAA,QAChBC,OADgB;;AAAA,qBAEbX,QAAQ,CAAC,EAAD,CAFK;AAAA;AAAA,QAEpBY,GAFoB;;AAAA,qBAGHZ,QAAQ,CAAC,EAAD,CAHL;AAAA;AAAA,QAGtBa,KAHsB;AAAA,QAGfC,QAHe;;AAAA,qBAICd,QAAQ,CAAC,EAAD,CAJT;AAAA;AAAA,QAItBe,OAJsB;AAAA,QAIbC,UAJa;;AAAA,qBAKGhB,QAAQ,CAAC,EAAD,CALX;AAAA;AAAA,QAKtBiB,QALsB;AAAA,QAKZC,WALY;;AAO7BjB,EAAAA,SAAS,CAAC,MAAM;AAAA,+BACIC,WAAW,CAACiB,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CADJ;AAAA,UACNV,IADM,sBACNA,IADM;;AAGdH,IAAAA,MAAM,GAAGJ,EAAE,CAACkB,QAAD,CAAX;AAEAT,IAAAA,GAAG;AACHD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAH,IAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAoB;AAAEZ,MAAAA;AAAF,KAApB,EAAgCa,KAAD,IAAW;AACxC,UAAIA,KAAJ,EAAW;AACTC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAJD;AAKD,GAbQ,EAaN,CAACF,QAAD,EAAWZ,QAAQ,CAACW,MAApB,CAbM,CAAT;AAeAnB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAqBV,OAAO,IAAI;AAC9BG,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcF,OAAd,CAAb,CAAX;AACD,KAFD;AAIAR,IAAAA,MAAM,CAACkB,EAAP,CAAU,MAAV,EAAkB,CAAC;AAAEZ,MAAAA;AAAF,KAAD,KAAe;AAC/BC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMa,WAAW,GAAIC,KAAD,IAAW;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEE,QAApB;AAA8B,IAAA,IAAI,EAAEP,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEK,OAAhB;AAAyB,IAAA,UAAU,EAAEC,UAArC;AAAiD,IAAA,WAAW,EAAEU,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEb,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CA9CD;;AAgDA,eAAeL,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport Input from '../Input/Input';\n\nimport './Chat.css';\n\n\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState('');\n  const [, set] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const { name, } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT);\n\n    set();\n    setName(name)\n\n    socket.emit('join', { name, }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n\n    socket.on(\"Data\", ({ users }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = (event) => {\n    console.log(message)\n  }\n\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container\">\n        This is a test\n        <Messages messages={messages} name={name} />\n        <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n      <TextContainer users={users} />\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}