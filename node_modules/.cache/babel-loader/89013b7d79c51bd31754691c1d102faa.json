{"ast":null,"code":"var _jsxFileName = \"/Users/willhaight/Desktop/Web_School/react/React-Chat-App/src/components/Chat.js\";\n\nfunction ChatTime() {\n  const writeMessage = async () => {\n    if (!projectAuth.currentUser) {\n      document.location.href = document.location.origin + \"/login\";\n    }\n\n    let writer = projectAuth.currentUser.email;\n    let message = {\n      wrote: document.getElementById('chatValue').value,\n      author: writer,\n      time: timestamp()\n    };\n    let error = null;\n\n    if (message.wrote && waiting === false) {\n      try {\n        await projectFirestore.collection('messages').add(message);\n        projectFirestore.collection('messages').orderBy('time');\n        document.getElementById('chatValue').value = null;\n        error = null;\n        document.getElementById('error').innerHTML = null;\n        update();\n        waitChange();\n        textWait();\n      } catch (err) {\n        console.log(err);\n        error = \"Could not send message. :(\";\n        document.getElementById('error').innerHTML = \"<p>\" + error + \"</p>\";\n      }\n    } else if (waiting === true) {\n      error = \"Wait 3 seconds in between sending messages\";\n      document.getElementById('error').innerHTML = \"<p>\" + error + \"</p>\";\n    } else {\n      error = \"Can't send an empty message.\";\n      document.getElementById('error').innerHTML = \"<p>\" + error + \"</p>\";\n    }\n  };\n\n  let waiting = false;\n\n  const textWait = () => {\n    setTimeout(waitChange, 3000);\n  };\n\n  function waitChange() {\n    waiting = !waiting;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"messageBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"chat-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"controlCenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"chatValue\",\n    placeholder: \"write a message...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: writeMessage,\n    id: \"sendBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Send\")));\n}\n\nexport default ChatTime;","map":{"version":3,"sources":["/Users/willhaight/Desktop/Web_School/react/React-Chat-App/src/components/Chat.js"],"names":["ChatTime","writeMessage","projectAuth","currentUser","document","location","href","origin","writer","email","message","wrote","getElementById","value","author","time","timestamp","error","waiting","projectFirestore","collection","add","orderBy","innerHTML","update","waitChange","textWait","err","console","log","setTimeout"],"mappings":"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","sourcesContent":["\nfunction ChatTime() {\n    const writeMessage = async () => {\n        if (!projectAuth.currentUser) {\n            document.location.href = document.location.origin + \"/login\"\n        }\n        let writer = projectAuth.currentUser.email\n        let message = { wrote: document.getElementById('chatValue').value, author: writer, time: timestamp() }\n        let error = null;\n        if (message.wrote && waiting === false) {\n\n            try {\n                await projectFirestore.collection('messages').add(message)\n                projectFirestore.collection('messages').orderBy('time')\n                document.getElementById('chatValue').value = null\n                error = null\n                document.getElementById('error').innerHTML = null\n                update()\n                waitChange()\n                textWait()\n            } catch (err) {\n                console.log(err)\n                error = \"Could not send message. :(\"\n                document.getElementById('error').innerHTML = `<p>` + error + `</p>`\n            }\n        } else if (waiting === true) {\n            error = \"Wait 3 seconds in between sending messages\"\n            document.getElementById('error').innerHTML = `<p>` + error + `</p>`\n        } else {\n            error = \"Can't send an empty message.\"\n            document.getElementById('error').innerHTML = `<p>` + error + `</p>`\n        }\n    }\n    let waiting = false\n    const textWait = () => {\n        setTimeout(waitChange, 3000)\n    }\n    function waitChange() {\n        waiting = !waiting\n    }\n\n    return (\n        <div className=\"content\">\n            <div id=\"messageBoard\">\n\n\n            </div>\n            <div className=\"chat-error\">\n                <div id=\"error\"></div>\n            </div>\n            <div className=\"controlCenter\">\n                <input type=\"text\" id=\"chatValue\" placeholder=\"write a message...\"></input>\n\n                <button onClick={writeMessage} id=\"sendBtn\">Send</button>\n\n            </div>\n        </div>\n    )\n}\nexport default ChatTime"]},"metadata":{},"sourceType":"module"}