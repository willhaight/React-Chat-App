{"ast":null,"code":"var _jsxFileName = \"/Users/willhaight/Desktop/react/React-Chat-App/src/views/Chatroom/Chat.js\";\nimport React from \"react\";\nimport Nav from '../../components/Naviagtion/Navigation';\nimport '../Chatroom/Chat.css';\nimport { projectFirestore } from \"../../firebase/config\";\nimport { projectAuth } from \"../../firebase/config\";\nimport { timestamp } from \"../../firebase/config\";\nexport default function Chat() {\n  //pull messages and append\n  const update = async () => {\n    projectFirestore.collection(\"messages\").orderBy(\"time\", \"desc\").onSnapshot(res => {\n      document.getElementById('messageBoard').innerHTML = null;\n      res.docs.forEach(doc => {\n        document.getElementById('messageBoard').innerHTML += \"<p>\" + doc.data().author + \": \" + doc.data().wrote + \"</p>\";\n      });\n    });\n  };\n\n  update(); //write message\n\n  const writeMessage = async () => {\n    if (!projectAuth.currentUser) {\n      document.location.href = document.location.origin + \"/login\";\n    }\n\n    let writer = projectAuth.currentUser.email;\n    let message = {\n      wrote: document.getElementById('chatValue').value,\n      author: writer,\n      time: timestamp()\n    };\n    let error = null;\n\n    if (message.wrote && waiting === false) {\n      try {\n        await projectFirestore.collection('messages').add(message);\n        projectFirestore.collection('messages').orderBy('time');\n        document.getElementById('chatValue').value = null;\n        error = null;\n        document.getElementById('error').innerHTML = null;\n        update();\n      } catch (err) {\n        console.log(err);\n        error = \"Could not send message. :(\";\n        document.getElementById('error').innerHTML = \"<p>\" + error + \"</p>\";\n      }\n    } else if (waiting === true) {\n      error = \"Wait 3 seconds in between sending messages\";\n      document.getElementById('error').innerHTML = \"<p>\" + error + \"</p>\";\n    } else {\n      error = \"Can't send an empty message.\";\n      document.getElementById('error').innerHTML = \"<p>\" + error + \"</p>\";\n    }\n\n    waitChange();\n    textWait();\n  };\n\n  let waiting = false;\n\n  const textWait = () => {\n    console.log('textWait');\n    setTimeout(waitChange, 3000);\n  };\n\n  function waitChange() {\n    waiting = !waiting;\n    console.log('chanage', waiting);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"nav-holder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Welcome to the Chatroom\")), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"messageBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"controlCenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"chatValue\",\n    placeholder: \"write a message...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: writeMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Send\")), React.createElement(\"div\", {\n    className: \"chat-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/willhaight/Desktop/react/React-Chat-App/src/views/Chatroom/Chat.js"],"names":["React","Nav","projectFirestore","projectAuth","timestamp","Chat","update","collection","orderBy","onSnapshot","res","document","getElementById","innerHTML","docs","forEach","doc","data","author","wrote","writeMessage","currentUser","location","href","origin","writer","email","message","value","time","error","waiting","add","err","console","log","waitChange","textWait","setTimeout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Nav from '../../components/Naviagtion/Navigation'\nimport '../Chatroom/Chat.css'\nimport { projectFirestore } from \"../../firebase/config\";\nimport { projectAuth } from \"../../firebase/config\";\nimport { timestamp } from \"../../firebase/config\";\n\n\nexport default function Chat() {\n\n    //pull messages and append\n    const update = async () => {\n\n        projectFirestore.collection(\"messages\")\n            .orderBy(\"time\", \"desc\")\n            .onSnapshot((res) => {\n                document.getElementById('messageBoard').innerHTML = null\n                res.docs.forEach(doc => {\n\n                    document.getElementById('messageBoard').innerHTML += `<p>` + doc.data().author + `: ` + doc.data().wrote + `</p>`\n                })\n            });\n\n\n\n    }\n    update()\n\n\n    //write message\n    const writeMessage = async () => {\n        if (!projectAuth.currentUser) {\n            document.location.href = document.location.origin + \"/login\"\n        }\n        let writer = projectAuth.currentUser.email\n        let message = { wrote: document.getElementById('chatValue').value, author: writer, time: timestamp() }\n        let error = null;\n        if (message.wrote && waiting === false) {\n\n            try {\n                await projectFirestore.collection('messages').add(message)\n                projectFirestore.collection('messages').orderBy('time')\n                document.getElementById('chatValue').value = null\n                error = null\n                document.getElementById('error').innerHTML = null\n                update()\n            } catch (err) {\n                console.log(err)\n                error = \"Could not send message. :(\"\n                document.getElementById('error').innerHTML = `<p>` + error + `</p>`\n            }\n        } else if (waiting === true) {\n            error = \"Wait 3 seconds in between sending messages\"\n            document.getElementById('error').innerHTML = `<p>` + error + `</p>`\n        } else {\n            error = \"Can't send an empty message.\"\n            document.getElementById('error').innerHTML = `<p>` + error + `</p>`\n        }\n        waitChange()\n        textWait()\n    }\n    let waiting = false\n    const textWait = () => {\n        console.log('textWait')\n        setTimeout(waitChange, 3000)\n    }\n    function waitChange() {\n        waiting = !waiting\n        console.log('chanage', waiting)\n    }\n\n    return (\n        <div>\n            <div className=\"nav-holder\">\n                <Nav />\n            </div>\n            <div className=\"heading\">\n                <h1>Welcome to the Chatroom</h1>\n            </div>\n            <div className=\"content\">\n                <div id=\"messageBoard\">\n\n\n                </div>\n                <div className=\"controlCenter\">\n                    <input type=\"text\" id=\"chatValue\" placeholder=\"write a message...\"></input>\n\n                    <button onClick={writeMessage}>Send</button>\n\n                </div>\n                <div className=\"chat-error\">\n                    <div id=\"error\"></div>\n                </div>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}